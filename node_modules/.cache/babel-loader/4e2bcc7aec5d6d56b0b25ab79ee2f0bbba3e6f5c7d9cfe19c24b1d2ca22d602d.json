{"ast":null,"code":"var _jsxFileName = \"/home/armen/Desktop/TODO-LIST-useContext/src/container/index.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport styles from \"./Container.module.scss\";\nimport TodoInsert from \"./TodoInsert\";\nimport TodoData from \"./TodoData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MyContextData = /*#__PURE__*/createContext({});\nconst Container = () => {\n  _s();\n  console.log(JSON.parse(JSON.stringify(localStorage.getItem(\"todos\"))));\n  const [data, setData] = useState(JSON.parse(JSON.stringify(localStorage.getItem(\"todos\"))) || []);\n  const [selectedRow, setSelectedRow] = useState(0);\n  const list = {\n    data,\n    setData,\n    selectedRow,\n    setSelectedRow\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.wrapper__container,\n      children: /*#__PURE__*/_jsxDEV(MyContextData.Provider, {\n        value: list,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper__container__insert,\n          children: /*#__PURE__*/_jsxDEV(TodoInsert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.wrapper__container__data,\n          children: /*#__PURE__*/_jsxDEV(TodoData, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Container, \"OuJIJi+mTRrNdSMGsm1S6AwcR8s=\");\n_c = Container;\nexport default Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["createContext","useState","styles","TodoInsert","TodoData","jsxDEV","_jsxDEV","MyContextData","Container","_s","console","log","JSON","parse","stringify","localStorage","getItem","data","setData","selectedRow","setSelectedRow","list","className","wrapper","children","wrapper__container","Provider","value","wrapper__container__insert","fileName","_jsxFileName","lineNumber","columnNumber","wrapper__container__data","_c","$RefreshReg$"],"sources":["/home/armen/Desktop/TODO-LIST-useContext/src/container/index.tsx"],"sourcesContent":["import { FC, createContext, useState } from \"react\";\n\nimport styles from \"./Container.module.scss\";\nimport TodoInsert from \"./TodoInsert\";\nimport TodoData from \"./TodoData\";\nimport { ITodoData, TData } from \"./types\";\n\nexport const MyContextData = createContext<ITodoData>({});\n\nconst Container: FC = () => {\n  console.log(JSON.parse(JSON.stringify(localStorage.getItem(\"todos\"))));\n  const [data, setData] = useState<TData[]>(\n    JSON.parse(JSON.stringify(localStorage.getItem(\"todos\"))) || []\n  );\n  const [selectedRow, setSelectedRow] = useState<number>(0);\n\n  const list: ITodoData = {\n    data,\n    setData,\n    selectedRow,\n    setSelectedRow,\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.wrapper__container}>\n        <MyContextData.Provider value={list}>\n          <div className={styles.wrapper__container__insert}>\n            <TodoInsert />\n          </div>\n          <div className={styles.wrapper__container__data}>\n            <TodoData />\n          </div>\n        </MyContextData.Provider>\n      </div>\n    </div>\n  );\n};\nexport default Container;\n"],"mappings":";;AAAA,SAAaA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlC,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAAY,CAAC,CAAC,CAAC;AAEzD,MAAMQ,SAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;EACtE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAC9BW,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,EAC/D,CAAC;EACD,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAS,CAAC,CAAC;EAEzD,MAAMoB,IAAe,GAAG;IACtBJ,IAAI;IACJC,OAAO;IACPC,WAAW;IACXC;EACF,CAAC;EAED,oBACEd,OAAA;IAAKgB,SAAS,EAAEpB,MAAM,CAACqB,OAAQ;IAAAC,QAAA,eAC7BlB,OAAA;MAAKgB,SAAS,EAAEpB,MAAM,CAACuB,kBAAmB;MAAAD,QAAA,eACxClB,OAAA,CAACC,aAAa,CAACmB,QAAQ;QAACC,KAAK,EAAEN,IAAK;QAAAG,QAAA,gBAClClB,OAAA;UAAKgB,SAAS,EAAEpB,MAAM,CAAC0B,0BAA2B;UAAAJ,QAAA,eAChDlB,OAAA,CAACH,UAAU;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CAAC,eACN1B,OAAA;UAAKgB,SAAS,EAAEpB,MAAM,CAAC+B,wBAAyB;UAAAT,QAAA,eAC9ClB,OAAA,CAACF,QAAQ;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACgB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CA5BID,SAAa;AAAA0B,EAAA,GAAb1B,SAAa;AA6BnB,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}