{"ast":null,"code":"var _jsxFileName = \"/home/armen/Desktop/TODO-LIST-useContext/src/components/atom/Text/index.tsx\",\n  _s = $RefreshSig$();\nimport { useTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Text = ({\n  tagName,\n  text = '',\n  className = '',\n  dataTestId\n}) => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const Tag = tagName;\n  const content = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: t(text)\n  }, void 0, false);\n  return Tag ? /*#__PURE__*/_jsxDEV(Tag, {\n    className: classNames({\n      [className]: className\n    }),\n    \"data-test-id\": dataTestId,\n    children: content\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : content;\n};\n_s(Text, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n_c = Text;\nexport default Text;\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["useTranslation","classNames","Fragment","_Fragment","jsxDEV","_jsxDEV","Text","tagName","text","className","dataTestId","_s","t","Tag","content","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/armen/Desktop/TODO-LIST-useContext/src/components/atom/Text/index.tsx"],"sourcesContent":["import type { FC } from 'react'\nimport { useTranslation } from 'react-i18next'\n\nimport type { TText } from './types'\nimport classNames from 'classnames'\n\nconst Text: FC<TText> = ({ tagName, text = '', className = '', dataTestId }) => {\n  const { t } = useTranslation()\n\n  const Tag = tagName\n  const content = <>{t(text)}</>\n\n  return Tag ? (\n    <Tag className={classNames({ [className]: className })} data-test-id={dataTestId}>\n      {content}\n    </Tag>\n  ) : (\n    content\n  )\n}\n\nexport default Text\n"],"mappings":";;AACA,SAASA,cAAc,QAAQ,eAAe;AAG9C,OAAOC,UAAU,MAAM,YAAY;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAe,GAAGA,CAAC;EAAEC,OAAO;EAAEC,IAAI,GAAG,EAAE;EAAEC,SAAS,GAAG,EAAE;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EAC9E,MAAM;IAAEC;EAAE,CAAC,GAAGZ,cAAc,CAAC,CAAC;EAE9B,MAAMa,GAAG,GAAGN,OAAO;EACnB,MAAMO,OAAO,gBAAGT,OAAA,CAAAF,SAAA;IAAAY,QAAA,EAAGH,CAAC,CAACJ,IAAI;EAAC,gBAAG,CAAC;EAE9B,OAAOK,GAAG,gBACRR,OAAA,CAACQ,GAAG;IAACJ,SAAS,EAAER,UAAU,CAAC;MAAE,CAACQ,SAAS,GAAGA;IAAU,CAAC,CAAE;IAAC,gBAAcC,UAAW;IAAAK,QAAA,EAC9ED;EAAO;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,GAENL,OACD;AACH,CAAC;AAAAH,EAAA,CAbKL,IAAe;EAAA,QACLN,cAAc;AAAA;AAAAoB,EAAA,GADxBd,IAAe;AAerB,eAAeA,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}