{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { EModeVariant } from \"types\";\nconst useDarkMode = () => {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(localStorage.getItem(\"theme\") === EModeVariant.Dark);\n  useEffect(() => {\n    const activeMode = localStorage.getItem(\"theme\");\n    document.documentElement.setAttribute(\"theme\", activeMode);\n    localStorage.setItem(\"theme\", activeMode);\n  }, []);\n  const updateActiveMode = useCallback(() => {\n    const activeMode = !isDarkMode ? EModeVariant.Dark : EModeVariant.Light;\n    localStorage.removeItem(\"theme\");\n    document.documentElement.setAttribute(\"theme\", activeMode);\n    setIsDarkMode(!isDarkMode);\n  }, [isDarkMode]);\n  return {\n    isDarkMode,\n    updateActiveMode\n  };\n};\n_s(useDarkMode, \"iJjg9DvqDo5SM1A60XjDugTP1cw=\");\nexport default useDarkMode;","map":{"version":3,"names":["useCallback","useEffect","useState","EModeVariant","useDarkMode","_s","isDarkMode","setIsDarkMode","localStorage","getItem","Dark","activeMode","document","documentElement","setAttribute","setItem","updateActiveMode","Light","removeItem"],"sources":["/home/armen/Desktop/TODO-LIST-useContext/src/hooks/useDarkMode.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport { EModeVariant } from \"types\";\n\nconst useDarkMode = () => {\n  const [isDarkMode, setIsDarkMode] = useState(\n    localStorage.getItem(\"theme\") === EModeVariant.Dark\n  );\n\n  useEffect(() => {\n    const activeMode = localStorage.getItem(\"theme\") as EModeVariant;\n\n    document.documentElement.setAttribute(\"theme\", activeMode);\n    localStorage.setItem(\"theme\", activeMode);\n  }, []);\n\n  const updateActiveMode = useCallback(() => {\n    const activeMode = !isDarkMode ? EModeVariant.Dark : EModeVariant.Light;\n\n    localStorage.removeItem(\"theme\");\n    document.documentElement.setAttribute(\"theme\", activeMode);\n    setIsDarkMode(!isDarkMode);\n  }, [isDarkMode]);\n\n  return { isDarkMode, updateActiveMode };\n};\n\nexport default useDarkMode;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,SAASC,YAAY,QAAQ,OAAO;AAEpC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAC1CM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,KAAKN,YAAY,CAACO,IACjD,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAGH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAiB;IAEhEG,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,OAAO,EAAEH,UAAU,CAAC;IAC1DH,YAAY,CAACO,OAAO,CAAC,OAAO,EAAEJ,UAAU,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,gBAAgB,GAAGhB,WAAW,CAAC,MAAM;IACzC,MAAMW,UAAU,GAAG,CAACL,UAAU,GAAGH,YAAY,CAACO,IAAI,GAAGP,YAAY,CAACc,KAAK;IAEvET,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAChCN,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,OAAO,EAAEH,UAAU,CAAC;IAC1DJ,aAAa,CAAC,CAACD,UAAU,CAAC;EAC5B,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,OAAO;IAAEA,UAAU;IAAEU;EAAiB,CAAC;AACzC,CAAC;AAACX,EAAA,CArBID,WAAW;AAuBjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}